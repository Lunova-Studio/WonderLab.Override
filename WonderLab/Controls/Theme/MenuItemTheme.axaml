<ResourceDictionary xmlns="https://github.com/avaloniaui"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:wc="using:WonderLab.Controls"
					xmlns:conv="using:Avalonia.Controls.Converters"
					xmlns:mi="using:Material.Icons.Avalonia">
	<Design.PreviewWith>
		<Border Padding="20" Width="320">
			<StackPanel Spacing="0" HorizontalAlignment="Left">
				<MenuItem Classes="primary" Header="_Standard"/>
				<MenuItem IsSelected="True" Header="Selected"/>
				<MenuItem Header="With Icon">
				</MenuItem>
				<MenuItem Header="With CheckBox" InputGesture="Ctrl">
				</MenuItem>
				<MenuItem Header="Input Gesture" InputGesture="Ctrl+G"/>
				<MenuItem Header="Disabled" IsEnabled="False"/>
				<MenuItem Header="-"/>
				<MenuItem Header="Parent" IsSubMenuOpen="True">
					<MenuItem Header="Child 1"/>
					<MenuItem Header="Child 2"/>
					<MenuItem Header="Child 3"/>
					<Separator/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 4"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 5" />
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 6"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 7"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 8"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 9"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 10"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 11"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 12"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 13"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 14"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 15"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 16"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 17"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 18"/>
					<MenuItem Icon="{mi:MaterialIconExt Pen}" Header="Child 19"/>
				</MenuItem>
				<MenuItem Header="Disabled Parent" IsEnabled="False">
					<MenuItem Header="Child"/>
				</MenuItem>
			</StackPanel>
		</Border>
	</Design.PreviewWith>

	<conv:PlatformKeyGestureConverter x:Key="KeyGestureConverter" />

	<ControlTheme x:Key="{x:Type MenuItem}" TargetType="MenuItem">
		<Setter Property="Padding" Value="8 6"/>
		<Setter Property="MinHeight" Value="35"/>
		<Setter Property="CornerRadius" Value="{DynamicResource WeakCornerRadius}"/>
		<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackground}"/>
		<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForeground}"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Panel>
					<wc:RippleControl Margin="4 0"
									  Name="PART_LayoutRoot"
									  Background="{TemplateBinding Background}"
									  BorderBrush="{TemplateBinding BorderBrush}"
									  CornerRadius="{TemplateBinding CornerRadius}"
									  BorderThickness="{TemplateBinding BorderThickness}"
									  RippleFill="{DynamicResource RippleEffectFillBrush}">
						<Grid Margin="{TemplateBinding Padding}"
							  ColumnDefinitions="auto auto * auto auto">
							<ContentPresenter FontSize="12"
											  VerticalAlignment="Center"
											  Content="{TemplateBinding Icon}"
											  Foreground="{TemplateBinding Foreground}"
											  Margin="{DynamicResource MenuIconPresenterMargin}"
											  Grid.Column="0"/>

							<ContentPresenter FontSize="14"
											  FontWeight="Regular"
											  VerticalAlignment="Center"
											  RecognizesAccessKey="True"
											  Name="PART_HeaderPresenter"
											  HorizontalAlignment="Stretch"
											  Content="{TemplateBinding Header}"
											  Foreground="{TemplateBinding Foreground}"
											  ContentTemplate="{TemplateBinding HeaderTemplate}"
											  Grid.Column="2"/>
							
							<TextBlock Classes="Body"
									   VerticalAlignment="Center"
									   HorizontalAlignment="Right"
									   Name="PART_InputGestureText"
									   Margin="{DynamicResource MenuInputGestureTextMargin}"
									   Foreground="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForeground}"
									   Text="{TemplateBinding InputGesture, Converter={StaticResource KeyGestureConverter}}"
									   Grid.Column="3"/>
							
							<mi:MaterialIcon FontSize="8"
											 Kind="MenuRight"
											 Name="PART_ChevronPath"
											 VerticalAlignment="Center"
											 HorizontalAlignment="Left"
											 Foreground="{TemplateBinding Foreground}"
											 Grid.Column="4"/>
						</Grid>
					</wc:RippleControl>
					
					<Popup Name="PART_Popup"
						   WindowManagerAddShadowHint="False"
						   Placement="RightEdgeAlignedTop"
						   HorizontalOffset="{DynamicResource MenuFlyoutSubItemPopupHorizontalOffset}"
						   IsLightDismissEnabled="False"
						   IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}">
						<Border Background="{DynamicResource MenuFlyoutPresenterBackground}"
								BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
								BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
								Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
								MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
								MinHeight="{DynamicResource MenuFlyoutThemeMinHeight}"
								HorizontalAlignment="Stretch"
								CornerRadius="{DynamicResource OverlayCornerRadius}">
							<ScrollViewer Theme="{StaticResource FluentMenuScrollViewer}">
								<ItemsPresenter Name="PART_ItemsPresenter"
												ItemsPanel="{TemplateBinding ItemsPanel}"
												Margin="{DynamicResource MenuFlyoutScrollerMargin}"
												Grid.IsSharedSizeScope="True" />
							</ScrollViewer>
						</Border>
					</Popup>
				</Panel>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:pointerover /template/ wc|RippleControl#PART_LayoutRoot">
			<Setter Property="Background" Value="{DynamicResource ListBoxItemPointeroverBackgroundBrush}" />
		</Style>

		<Style Selector="^:selected /template/ wc|RippleControl#PART_LayoutRoot">
			<Setter Property="Background" Value="{DynamicResource ListBoxItemSelectedBackgroundBrush}" />

			<Style Selector="^:pointerover">
				<Setter Property="Background" Value="{DynamicResource ListBoxItemSelectedPointeroverBackgroundBrush}" />
			</Style>
		</Style>

		<Style Selector="^:disabled">			
			<Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundDisabled}" />
			</Style>
			
			<Style Selector="^ /template/ TextBlock#PART_InputGestureText">
				<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled}" />
			</Style>
		</Style>

		<Style Selector="^:icon /template/ ContentControl#PART_IconPresenter">
			<Setter Property="IsVisible" Value="True" />
		</Style>

		<Style Selector="^:empty /template/ mi|MaterialIcon#PART_ChevronPath">
			<Setter Property="IsVisible" Value="False" />
		</Style>

		<Style Selector="^ /template/ Image#PART_ToggleIconImage">
			<Setter Property="IsVisible" Value="True" />
		</Style>

		<Style Selector="^:separator">
			<Setter Property="Padding" Value="8"/>
			<Setter Property="MinHeight" Value="1"/>
			<Setter Property="Template">
				<ControlTemplate>
					<Separator Height="0.8"
							   UseLayoutRounding="False"
							   Margin="{TemplateBinding Padding}"/>
				</ControlTemplate>
			</Setter>
		</Style>

		<Style Selector="^.primary:pointerover">
			<Setter Property="Foreground" Value="{DynamicResource PrimaryMenuItemPointerOverForegroundBrush}"/>

			<Style Selector="^ /template/ wc|RippleControl#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource PrimaryMenuItemPointerOverBackgroundBrush}"/>
			</Style>
		</Style>

		<Style Selector="^.error:pointerover">
			<Setter Property="Foreground" Value="{DynamicResource ErrorMenuItemPointerOverForegroundBrush}"/>

			<Style Selector="^ /template/ wc|RippleControl#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource ErrorMenuItemPointerOverBackgroundBrush}"/>
			</Style>
		</Style>
	</ControlTheme>
	
	<ControlTheme x:Key="HorizontalMenuItem" TargetType="MenuItem" BasedOn="{StaticResource FluentTopLevelMenuItem}">
		<Setter Property="Padding" Value="{DynamicResource HorizontalMenuFlyoutItemThemePaddingNarrow}" />
		<Setter Property="Margin" Value="{DynamicResource HorizontalMenuFlyoutItemMargin}" />
	</ControlTheme>
</ResourceDictionary>