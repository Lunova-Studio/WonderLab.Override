<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:wc="using:WonderLab.Controls"
					xmlns:mi="using:Material.Icons.Avalonia">
	<Design.PreviewWith>
		<Border Padding="20">
			<StackPanel Spacing="20">
				<DropDownButton Content="Click Me!" Width="100"/>
				<DropDownButton Content="Disabled" IsEnabled="False" />
			</StackPanel>
		</Border>
	</Design.PreviewWith>

	<ControlTheme x:Key="{x:Type DropDownButton}" TargetType="DropDownButton">
		<Setter Property="Padding" Value="8 6" />
		<Setter Property="MinHeight" Value="35" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
		<Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
		<Setter Property="CornerRadius" Value="{DynamicResource NormalCornerRadius}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<wc:RippleControl ClipToBounds="True"
									  Name="PART_RootRippleControl"
									  Background="{TemplateBinding Background}"
									  BorderBrush="{TemplateBinding BorderBrush}"
									  CornerRadius="{TemplateBinding CornerRadius}"
									  BorderThickness="{TemplateBinding BorderThickness}"
									  RippleFill="{DynamicResource RippleEffectFillBrush}">
						<Grid ColumnDefinitions="* auto">
							<Border Grid.ColumnSpan="2"
									Background="Transparent"
									VerticalAlignment="Stretch"
									HorizontalAlignment="Stretch"
									Name="PART_PointerOverBorder"/>
							
							<ContentPresenter Grid.Column="0"
											  RecognizesAccessKey="True"
											  Name="PART_ContentPresenter"
											  Content="{TemplateBinding Content}"
											  Padding="{TemplateBinding Padding}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"/>

							<mi:MaterialIcon Margin="0 0 12 0"
											 Kind="ChevronDown"
											 RenderTransform="none"
											 Name="PART_MaterialIcon"
											 IsHitTestVisible="False"
											 UseLayoutRounding="False"
											 VerticalAlignment="Center"
											 HorizontalAlignment="Right"
											 Foreground="{TemplateBinding Foreground}"
											 Grid.Column="1">
								<mi:MaterialIcon.Transitions>
									<Transitions>
										<TransformOperationsTransition Duration="0:0:.35"
																	   Property="RenderTransform"
																	   Easing="ExponentialEaseOut"/>
									</Transitions>
								</mi:MaterialIcon.Transitions>
							</mi:MaterialIcon>
						</Grid>
					</wc:RippleControl>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<!--  PointerOver State  -->
		<Style Selector="^:pointerover">
			<Style Selector="^ /template/ Border#PART_PointerOverBorder">
				<Setter Property="Background" Value="{DynamicResource ButtonPointerOverBackgroundBrush}"/>
			</Style>

			<Style Selector="^ /template/ wc|RippleControl#PART_RootRippleControl">
				<Setter Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}"/>
			</Style>

			<Style Selector="^ /template/ mi|MaterialIcon#PART_MaterialIcon">
				<Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
			</Style>
		</Style>

		<!--  Pressed State  -->
		<Style Selector="^:pressed">
			<Style Selector="^ /template/ wc|RippleControl#PART_RootRippleControl">
				<Setter Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
			</Style>

			<Style Selector="^ /template/ mi|MaterialIcon#PART_MaterialIcon">
				<Setter Property="RenderTransform" Value="translateY(3px)"/>
			</Style>
		</Style>

		<!--  Disabled State  -->
		<Style Selector="^:disabled /template/ wc|RippleControl#PART_RootRippleControl">
			<Setter Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}" />
			<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushDisabled}" />
			<Setter Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundDisabled}" />
		</Style>
	</ControlTheme>
</ResourceDictionary>