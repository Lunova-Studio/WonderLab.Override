<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
			 xmlns:mi="using:Material.Icons.Avalonia"
			 xmlns:wa="using:WonderLab.Media.Attachments"
			 xmlns:wb="using:WonderLab.Media.Behaviors"
			 xmlns:wc="using:WonderLab.Controls"
             x:Class="WonderLab.AccountPage">	
	<Interaction.Behaviors>
		<EventTriggerBehavior EventName="Navigated">
			<InvokeCommandAction Command="{Binding NavigatedCommand}"/>
		</EventTriggerBehavior>
	</Interaction.Behaviors>

	<Grid RowSpacing="8"
		  Margin="0 0 16 24"
		  RowDefinitions="auto auto *">
		<wc:SettingCards Header="账户管理"
						 Grid.Row="0">
			<wc:SettingCard Header="添加账户"
							Icon="{mi:MaterialIconExt AccountPlusOutline}">
				<Button Classes="secondary"
						Content="添加"
						Command="{Binding ShowAddAccountDialogCommand}"/>
			</wc:SettingCard>

			<Separator Margin="16 0" Padding="0" Height="1" Opacity="0.2"/>

			<wc:SettingCard Header="是否在启动前自动刷新账户"
							Icon="{mi:MaterialIconExt AccountReactivateOutline}">
				<ToggleSwitch IsChecked="{Binding IsAutoRefreshAccount, Mode=TwoWay}"/>
			</wc:SettingCard>
		</wc:SettingCards>

		<TextBlock Margin="0 12 0 0"
				   Classes="BodyStrong"
				   Text="所有账户"
				   Grid.Row="1"/>

		<ContentControl Classes="tip"
						Content="没有账户哦喵~"
						IsVisible="{Binding HasAccounts, Converter={StaticResource BoolReverseConverter}}"
						Grid.Row="2"/>
		
		<ListBox ItemsSource="{Binding Accounts}"
				 SelectedItem="{Binding ActiveAccount}"
				 Grid.Row="2">
			<ListBox.ItemsPanel>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel Orientation="Vertical"/>
				</ItemsPanelTemplate>
			</ListBox.ItemsPanel>

			<ListBox.ItemContainerTheme>
				<ControlTheme TargetType="ListBoxItem">
					<Setter Property="Margin" Value="0 0 0 8"/>
					<Setter Property="Padding" Value="{DynamicResource ListBoxItemPadding}"/>
					<Setter Property="Background" Value="{DynamicResource TileBackgroundBrush}"/>
					<Setter Property="CornerRadius" Value="{StaticResource StrongCornerRadius}"/>
					
					<Setter Property="Template">
						<ControlTemplate>
							<Panel>
								<Border CornerRadius="{TemplateBinding CornerRadius}"
										Background="{DynamicResource TileBackgroundBrush}"/>
								
								<Border Name="PART_Border"
										Padding="{TemplateBinding Padding}"
										Background="{TemplateBinding Background}"
										CornerRadius="{TemplateBinding CornerRadius}">
									<Grid RowDefinitions="* *"
										  ColumnDefinitions="auto * auto">
										<Border Width="38"
												Height="38"
												Grid.Row="0"
												Grid.RowSpan="2">
											<Border.Effect>
												<DropShadowEffect BlurRadius="4" OffsetX="0" OffsetY="1" Color="#40000000"/>
											</Border.Effect>

											<Border.Background>
												<ImageBrush Source="{Binding Avatar}"/>
											</Border.Background>
										</Border>

										<TextBlock Margin="8 0 16 0"
												   Classes="BodyStrong"
												   VerticalAlignment="Center"
												   HorizontalAlignment="Left"
												   TextTrimming="CharacterEllipsis"
												   Text="{Binding Account.Name}"
												   Grid.Row="0"
												   Grid.Column="1"/>

										<wc:Tag Margin="8 2 16 0"
												HorizontalAlignment="Left"
												Text="{Binding Account.Type}"
												Grid.Row="1"
												Grid.Column="1"/>

										<Grid ColumnSpacing="8"
											  ColumnDefinitions="auto auto auto"
											  Grid.Row="0"
											  Grid.Column="2"
											  Grid.RowSpan="2">
											<Button Width="30"
													Height="30"
													FontSize="20"
													Classes="icon"
													Content="&#xE72C;"
													Grid.Column="0"/>

											<Button Width="30"
													Height="30"
													FontSize="28"
													Classes="icon"
													Content="&#xE76E;"
													Grid.Column="1"/>

											<Button Width="30"
													Height="30"
													FontSize="20"
													Classes="icon"
													Content="&#xE74D;"
													CommandParameter="{Binding}"
													Command="{Binding $parent[ListBox].DataContext.RemoveAccountCommand}"
													Grid.Column="2"/>
										</Grid>
									</Grid>
								</Border>

								<Border Height="5"
										Width="3.5"
										Opacity="0"
										UseLayoutRounding="False"
										Name="PART_SelectedBorder"
										VerticalAlignment="Center"
										HorizontalAlignment="Left"
										CornerRadius="{TemplateBinding CornerRadius}"
										Background="{DynamicResource ListBoxItemIndicatorBackgroundBrush}">
									<Border.Transitions>
										<Transitions>
											<DoubleTransition Property="Height"
															  Duration="0:0:.25"
															  Easing="ExponentialEaseOut"/>

											<DoubleTransition Property="Opacity"
															  Duration="0:0:.15"/>
										</Transitions>
									</Border.Transitions>
								</Border>
							</Panel>
						</ControlTemplate>
					</Setter>

					<!--  PointerOver State  -->
					<Style Selector="^:pointerover /template/ Border#PART_Border">
						<Setter Property="Background" Value="{DynamicResource ListBoxItemPointeroverBackgroundBrush}" />
					</Style>

					<!--  Pressed State  -->
					<Style Selector="^:pressed /template/ Border#PART_Border">
						<Setter Property="Background" Value="{DynamicResource ListBoxItemPointerPressedBackgroundBrush}" />
					</Style>

					<!--  Selected State  -->
					<Style Selector="^:selected">
						<Style Selector="^ /template/ Border#PART_Border">
							<Setter Property="Background" Value="{DynamicResource ListBoxItemSelectedBackgroundBrush}" />
						</Style>

						<Style Selector="^ /template/ Border#PART_SelectedBorder">
							<Setter Property="Height" Value="20" />
							<Setter Property="Opacity" Value="1" />
						</Style>

						<!--  Selected PointerOver State  -->
						<Style Selector="^:pointerover /template/ Border#PART_Border">
							<Setter Property="Background" Value="{DynamicResource ListBoxItemSelectedPointeroverBackgroundBrush}" />
						</Style>

						<!--  Selected Pressed State  -->
						<Style Selector="^:pressed /template/ Border#PART_Border">
							<Setter Property="Background" Value="{DynamicResource ListBoxItemSelectedPointerPressedBackgroundBrush}" />
						</Style>

						<Style Selector="^:pressed /template/ Border#PART_SelectedBorder">
							<Setter Property="Height" Value="14" />
						</Style>
					</Style>
				</ControlTheme>
			</ListBox.ItemContainerTheme>
		</ListBox>
	</Grid>
</UserControl>